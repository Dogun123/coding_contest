const data = [{"year":1950,"sex":"female","0s":1584.0079999999998,"10s":1412.405,"20s":952.653,"30s":600.221,"40s":458.44399999999996,"50s":355.474,"60s":220.424,"70s":79.684,"80s":13.452,"90s":0.881},{"year":1955,"sex":"female","0s":1246.212,"10s":1466.173,"20s":991.109,"30s":639.443,"40s":444.56600000000003,"50s":359.384,"60s":232.613,"70s":97.81099999999999,"80s":15.143999999999998,"90s":0.718},{"year":1960,"sex":"female","0s":1470.9080000000001,"10s":1438.1770000000001,"20s":1208.5970000000002,"30s":761.4069999999999,"40s":490.063,"50s":384.168,"60s":255.35299999999998,"70s":117.755,"80s":17.94,"90s":0.6449999999999999},{"year":1965,"sex":"female","0s":1806.394,"10s":1183.401,"20s":1366.008,"30s":908.3240000000001,"40s":588.552,"50s":399.302,"60s":276.526,"70s":136.064,"80s":26.323,"90s":0.884},{"year":1970,"sex":"female","0s":2045.1,"10s":1408.091,"20s":1362.318,"30s":1128.495,"40s":711.1469999999999,"50s":447.418,"60s":304.454,"70s":155.84,"80s":33.114,"90s":1.126},{"year":1975,"sex":"female","0s":2337.8370000000004,"10s":1756.9099999999999,"20s":1140.24,"30s":1302.62,"40s":863.4749999999999,"50s":547.267,"60s":328.10699999999997,"70s":179.938,"80s":43.342999999999996,"90s":1.9889999999999999},{"year":1980,"sex":"female","0s":1977.326,"10s":2005.808,"20s":1375.039,"30s":1317.839,"40s":1086.662,"50s":670.501,"60s":379.874,"70s":208.25099999999998,"80s":53.876000000000005,"90s":2.738},{"year":1985,"sex":"female","0s":1748.996,"10s":2305.182,"20s":1724.835,"30s":1111.929,"40s":1263.804,"50s":821.52,"60s":474.012,"70s":232.299,"80s":67.033,"90s":4.003},{"year":1990,"sex":"female","0s":1876.847,"10s":1955.556,"20s":1977.227,"30s":1347.879,"40s":1284.404,"50s":1040.103,"60s":588.254,"70s":277.276,"80s":81.025,"90s":5.237000000000001},{"year":1995,"sex":"female","0s":1958.403,"10s":1735.536,"20s":2283.706,"30s":1701.421,"40s":1091.2060000000001,"50s":1221.481,"60s":740.225,"70s":364.35699999999997,"80s":100.432,"90s":7.6240000000000006},{"year":2000,"sex":"female","0s":1967.73,"10s":1858.899,"20s":1930.5459999999998,"30s":1945.2400000000002,"40s":1321.275,"50s":1235.433,"60s":925.789,"70s":441.821,"80s":115.84800000000001,"90s":8.769},{"year":2005,"sex":"female","0s":1895.161,"10s":1930.376,"20s":1708.3960000000002,"30s":2232.559,"40s":1657.971,"50s":1042.255,"60s":1071.352,"70s":542.1759999999999,"80s":143.929,"90s":9.648000000000001},{"year":2010,"sex":"female","0s":1758.24,"10s":1947.4879999999998,"20s":1829.951,"30s":1886.613,"40s":1899.546,"50s":1269.9560000000001,"60s":1087.147,"70s":685.722,"80s":177.839,"90s":11.719999999999999},{"year":2015,"sex":"female","0s":1653.481,"10s":1876.555,"20s":1903.2649999999999,"30s":1670.7530000000002,"40s":2183.795,"50s":1595.394,"60s":923.431,"70s":807.9110000000001,"80s":237.048,"90s":17.949},{"year":2020,"sex":"female","0s":1674.9299999999998,"10s":1743.0529999999999,"20s":1922.2510000000002,"30s":1795.513,"40s":1848.623,"50s":1838.0839999999998,"60s":1155.532,"70s":840.611,"80s":325.074,"90s":26.765},{"year":1950,"sex":"male","0s":1523.29,"10s":1210.874,"20s":713.9590000000001,"30s":541.389,"40s":374.95000000000005,"50s":280.219,"60s":165.586,"70s":54.132999999999996,"80s":7.165,"90s":0.259},{"year":1955,"sex":"male","0s":1192.691,"10s":1382.007,"20s":715.799,"30s":460.084,"40s":374.41200000000003,"50s":258.007,"60s":149.33,"70s":53.497,"80s":7.73,"90s":0.267},{"year":1960,"sex":"male","0s":1464.3719999999998,"10s":1378.754,"20s":1042.216,"30s":502.11699999999996,"40s":405.826,"50s":275.142,"60s":153.947,"70s":50.204,"80s":6.402,"90s":0.19599999999999998},{"year":1965,"sex":"male","0s":1833.633,"10s":1131.493,"20s":1295.875,"30s":648.554,"40s":409.033,"50s":318.277,"60s":161.56300000000002,"70s":50.577,"80s":6.525,"90s":0.21600000000000003},{"year":1970,"sex":"male","0s":2100.125,"10s":1395.351,"20s":1308.141,"30s":961.088,"40s":454.63800000000003,"50s":351.182,"60s":180.15300000000002,"70s":55.855,"80s":6.569999999999999,"90s":0.185},{"year":1975,"sex":"male","0s":2420.357,"10s":1780.251,"20s":1088.881,"30s":1221.529,"40s":602.367,"50s":364.251,"60s":222.127,"70s":65.218,"80s":7.803,"90s":0.22699999999999998},{"year":1980,"sex":"male","0s":2057.3720000000003,"10s":2056.757,"20s":1360.512,"30s":1252.597,"40s":909.0740000000001,"50s":414.253,"60s":254.02800000000002,"70s":79.644,"80s":9.735,"90s":0.258},{"year":1985,"sex":"male","0s":1826.617,"10s":2384.633,"20s":1743.2649999999999,"30s":1052.424,"40s":1167.806,"50s":557.6189999999999,"60s":272.788,"70s":105.58600000000001,"80s":12.529,"90s":0.34600000000000003},{"year":1990,"sex":"male","0s":1963.4879999999998,"10s":2033.618,"20s":2022.7740000000001,"30s":1323.988,"40s":1205.4569999999999,"50s":849.6590000000001,"60s":319.061,"70s":124.36500000000001,"80s":16.376,"90s":0.46299999999999997},{"year":1995,"sex":"male","0s":2047.326,"10s":1810.4499999999998,"20s":2354.4139999999998,"30s":1706.759,"40s":1020.8589999999999,"50s":1102.018,"60s":447.722,"70s":143.43900000000002,"80s":24.261,"90s":0.661},{"year":2000,"sex":"male","0s":2060.114,"10s":1934.382,"20s":1991.676,"30s":1962.703,"40s":1274.2379999999998,"50s":1118.337,"60s":653.874,"70s":156.632,"80s":24.98,"90s":0.792},{"year":2005,"sex":"male","0s":1984.035,"10s":2008.915,"20s":1769.781,"30s":2269.014,"40s":1629.654,"50s":938.808,"60s":828.063,"70s":214.09900000000002,"80s":26.906,"90s":1.069},{"year":2010,"sex":"male","0s":1835.2640000000001,"10s":2035.621,"20s":1896.7040000000002,"30s":1927.3600000000001,"40s":1889.684,"50s":1193.406,"60s":853.381,"70s":329.845,"80s":32.181,"90s":1.1720000000000002},{"year":2015,"sex":"male","0s":1729.418,"10s":1962.2150000000001,"20s":1973.86,"30s":1715.606,"40s":2190.6899999999996,"50s":1527.145,"60s":728.4359999999999,"70s":433.115,"80s":52.062,"90s":1.703},{"year":2020,"sex":"male","0s":1755.441,"10s":1818.176,"20s":2003.4650000000001,"30s":1846.3809999999999,"40s":1865.6930000000002,"50s":1784.7020000000002,"60s":979.1510000000001,"70s":463.34799999999996,"80s":89.40899999999999,"90s":2.6130000000000004}]

male_num = document.querySelectorAll('.population__bar__right__num');
male_chart = document.querySelectorAll('.population__bar__right__value');
female_num = document.querySelectorAll('.population__bar__left__num');
year = document.querySelector('.population__year');
console.log(year);
console.log(data[0]["year"]);
console.log(male_chart[0]);
// male_chart[0].style.width =  79+ '%';
const nSecond = 5,
      resolutionMS = 33;


  delayPop(0);

  delayYear(0);

// 5초마다 숫자 카운팅 이어서하기 
function delayPop(d) {
  countIni(d);
  if(d==3){
    return false;
  }
  console.log("complete")
  sleep(5000).then(() => delayPop(d+1));
}



function delayYear(d) {
  countYear(d);
  if(d==3){
    return false;
  }
  sleep(5000).then(() => delayYear(d+1));
}

// 숫자 카운팅 함수
function countIni(order) {
  let startNum = Math.floor(data[order]["0s"])*1000,
  endNum = Math.floor(data[order+1]["0s"])*1000,
  deltaNum = (endNum - startNum) / (1000 / resolutionMS) / nSecond;

  var handle = setInterval(() => {
    var x = startNum.toLocaleString(undefined, {
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    });
    male_num[0].innerHTML = x.toString();
    male_chart[0].style.width = startNum/250000 + '%';
    console.log(typeof(startNum))
    // if already updated the endNum, stop
    if(startNum<=endNum){
      if (startNum >= endNum) clearInterval(handle);
    
    startNum += deltaNum;
    startNum = Math.min(startNum, endNum);
    } else if(startNum>endNum){
      if (startNum <= endNum) clearInterval(handle);
    
    startNum += deltaNum;
    startNum = Math.max(startNum, endNum);
    }
    
  }, resolutionMS);
};



function countYear(counting) {
  let startNum = data[counting]["year"],
  endNum = data[counting+1]["year"],
  deltaNum = (endNum - startNum) / (1000 / resolutionMS) / nSecond;
  console.log(startNum);
  var handle = setInterval(() => {
    var x = startNum.toLocaleString(undefined, {
      minimumFractionDigits: 0,
      maximumFractionDigits: 0
    });
    year.innerHTML = x.toString().replace(",", "");
    
    // if already updated the endNum, stop
    if (startNum >= endNum) clearInterval(handle);
    
    startNum += deltaNum;
    startNum = Math.min(startNum, endNum);
  }, resolutionMS);
};



// 비동기 지연함수
function sleep(ms) {
  return new Promise((r) => setTimeout(r, ms));
}
